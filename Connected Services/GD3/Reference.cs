//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD3
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", ConfigurationName="GD3.GD3Soap")]
    public interface GD3Soap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/LatestEncodeCenterVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.LatestEncodeCenterVersionResponse> LatestEncodeCenterVersionAsync(GD3.LatestEncodeCenterVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/LatestEncodeCenterVersionURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.LatestEncodeCenterVersionURLResponse> LatestEncodeCenterVersionURLAsync(GD3.LatestEncodeCenterVersionURLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/RetrieveAlbum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.RetrieveAlbumResponse> RetrieveAlbumAsync(GD3.RetrieveAlbumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/MatchCDID_ISRC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.MatchCDID_ISRCResponse> MatchCDID_ISRCAsync(GD3.MatchCDID_ISRCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/MatchCDID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.MatchCDIDResponse> MatchCDIDAsync(GD3.MatchCDIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/MatchCDID2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.MatchCDID2Response> MatchCDID2Async(GD3.MatchCDID2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/MatchCDID_Advanced", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.MatchCDID_AdvancedResponse> MatchCDID_AdvancedAsync(GD3.MatchCDID_AdvancedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/InsertAlbum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.InsertAlbumResponse> InsertAlbumAsync(GD3.InsertAlbumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/UpdatePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.UpdatePasswordResponse> UpdatePasswordAsync(GD3.UpdatePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/GetNumberOfLookupsRemaining", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.GetNumberOfLookupsRemainingResponse> GetNumberOfLookupsRemainingAsync(GD3.GetNumberOfLookupsRemainingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/SearchArtistNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.SearchArtistNamesResponse> SearchArtistNamesAsync(GD3.SearchArtistNamesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/SearchArtist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.SearchArtistResponse> SearchArtistAsync(GD3.SearchArtistRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/SearchTracks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.SearchTracksResponse> SearchTracksAsync(GD3.SearchTracksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/SearchTracksByArtistAlbum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.SearchTracksByArtistAlbumResponse> SearchTracksByArtistAlbumAsync(GD3.SearchTracksByArtistAlbumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/SearchAlbum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.SearchAlbumResponse> SearchAlbumAsync(GD3.SearchAlbumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/SearchAlbumExt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.SearchAlbumExtResponse> SearchAlbumExtAsync(GD3.SearchAlbumExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/RetrieveGenreInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.RetrieveGenreInfoResponse> RetrieveGenreInfoAsync(GD3.RetrieveGenreInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/FingerPrint_getTocSessionID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.FingerPrint_getTocSessionIDResponse> FingerPrint_getTocSessionIDAsync(GD3.FingerPrint_getTocSessionIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/FingerPrint_Insert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.FingerPrint_InsertResponse> FingerPrint_InsertAsync(GD3.FingerPrint_InsertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/FingerPrint_getTocSessionID2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.FingerPrint_getTocSessionID2Response> FingerPrint_getTocSessionID2Async(GD3.FingerPrint_getTocSessionID2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://gdwebservice.getdigitaldata.com/GD3/FingerPrint_Insert2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GD3.FingerPrint_Insert2Response> FingerPrint_Insert2Async(GD3.FingerPrint_Insert2Request request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
    public partial class AuthHeader
    {
        
        private string usernameField;
        
        private string passwordField;
        
        private string productCodeField;
        
        private int requestIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username
        {
            get
            {
                return this.usernameField;
            }
            set
            {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ProductCode
        {
            get
            {
                return this.productCodeField;
            }
            set
            {
                this.productCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int RequestID
        {
            get
            {
                return this.requestIDField;
            }
            set
            {
                this.requestIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AlbumMatch
    {
        
        private int albumIDField;
        
        private string artistField;
        
        private string albumField;
        
        private string trackField;
        
        private int trackNumberField;
        
        private int totalTracksField;
        
        private int confidenceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int AlbumID
        {
            get
            {
                return this.albumIDField;
            }
            set
            {
                this.albumIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Artist
        {
            get
            {
                return this.artistField;
            }
            set
            {
                this.artistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Album
        {
            get
            {
                return this.albumField;
            }
            set
            {
                this.albumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Track
        {
            get
            {
                return this.trackField;
            }
            set
            {
                this.trackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int TrackNumber
        {
            get
            {
                return this.trackNumberField;
            }
            set
            {
                this.trackNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int TotalTracks
        {
            get
            {
                return this.totalTracksField;
            }
            set
            {
                this.totalTracksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int Confidence
        {
            get
            {
                return this.confidenceField;
            }
            set
            {
                this.confidenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FingPrintResult
    {
        
        private bool _successField;
        
        private System.Guid _tocsessionIDField;
        
        private string _errormsgField;
        
        private AlbumMatch[] _matchcollField;
        
        private bool successField;
        
        private System.Guid tocSessionIDField;
        
        private string errorMsgField;
        
        private AlbumMatch[] matchResultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool _success
        {
            get
            {
                return this._successField;
            }
            set
            {
                this._successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.Guid _tocsessionID
        {
            get
            {
                return this._tocsessionIDField;
            }
            set
            {
                this._tocsessionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string _errormsg
        {
            get
            {
                return this._errormsgField;
            }
            set
            {
                this._errormsgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public AlbumMatch[] _matchcoll
        {
            get
            {
                return this._matchcollField;
            }
            set
            {
                this._matchcollField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool Success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.Guid TocSessionID
        {
            get
            {
                return this.tocSessionIDField;
            }
            set
            {
                this.tocSessionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ErrorMsg
        {
            get
            {
                return this.errorMsgField;
            }
            set
            {
                this.errorMsgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public AlbumMatch[] MatchResults
        {
            get
            {
                return this.matchResultsField;
            }
            set
            {
                this.matchResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
    public partial class CollectExt
    {
        
        private int sizeField;
        
        private int pageLimitField;
        
        private int offsetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Size
        {
            get
            {
                return this.sizeField;
            }
            set
            {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int PageLimit
        {
            get
            {
                return this.pageLimitField;
            }
            set
            {
                this.pageLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Offset
        {
            get
            {
                return this.offsetField;
            }
            set
            {
                this.offsetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
    public partial class SearchResultExt
    {
        
        private CollectExt collectionField;
        
        private SearchResult[] searchResultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CollectExt Collection
        {
            get
            {
                return this.collectionField;
            }
            set
            {
                this.collectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public SearchResult[] SearchResults
        {
            get
            {
                return this.searchResultsField;
            }
            set
            {
                this.searchResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
    public partial class SearchResult
    {
        
        private string artistField;
        
        private string albumField;
        
        private string trackTitleField;
        
        private int albumIDField;
        
        private bool coverAvailableField;
        
        private int coverArtWidthField;
        
        private int coverArtHeightField;
        
        private string publisherField;
        
        private int numberOfTracksField;
        
        private int requestIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Artist
        {
            get
            {
                return this.artistField;
            }
            set
            {
                this.artistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Album
        {
            get
            {
                return this.albumField;
            }
            set
            {
                this.albumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TrackTitle
        {
            get
            {
                return this.trackTitleField;
            }
            set
            {
                this.trackTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int AlbumID
        {
            get
            {
                return this.albumIDField;
            }
            set
            {
                this.albumIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool CoverAvailable
        {
            get
            {
                return this.coverAvailableField;
            }
            set
            {
                this.coverAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int CoverArtWidth
        {
            get
            {
                return this.coverArtWidthField;
            }
            set
            {
                this.coverArtWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int CoverArtHeight
        {
            get
            {
                return this.coverArtHeightField;
            }
            set
            {
                this.coverArtHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Publisher
        {
            get
            {
                return this.publisherField;
            }
            set
            {
                this.publisherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int NumberOfTracks
        {
            get
            {
                return this.numberOfTracksField;
            }
            set
            {
                this.numberOfTracksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int RequestID
        {
            get
            {
                return this.requestIDField;
            }
            set
            {
                this.requestIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
    public partial class AlbumCode
    {
        
        private int matchTypeField;
        
        private int albumCode1Field;
        
        private string albumField;
        
        private string artistField;
        
        private bool coverAvailableField;
        
        private int coverArtWidthField;
        
        private int coverArtHeightField;
        
        private int requestIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int MatchType
        {
            get
            {
                return this.matchTypeField;
            }
            set
            {
                this.matchTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AlbumCode", Order=1)]
        public int AlbumCode1
        {
            get
            {
                return this.albumCode1Field;
            }
            set
            {
                this.albumCode1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Album
        {
            get
            {
                return this.albumField;
            }
            set
            {
                this.albumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Artist
        {
            get
            {
                return this.artistField;
            }
            set
            {
                this.artistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool CoverAvailable
        {
            get
            {
                return this.coverAvailableField;
            }
            set
            {
                this.coverAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int CoverArtWidth
        {
            get
            {
                return this.coverArtWidthField;
            }
            set
            {
                this.coverArtWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int CoverArtHeight
        {
            get
            {
                return this.coverArtHeightField;
            }
            set
            {
                this.coverArtHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int RequestID
        {
            get
            {
                return this.requestIDField;
            }
            set
            {
                this.requestIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
    public partial class Soloist
    {
        
        private string soloistNameField;
        
        private string soloistNameSortField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SoloistName
        {
            get
            {
                return this.soloistNameField;
            }
            set
            {
                this.soloistNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SoloistNameSort
        {
            get
            {
                return this.soloistNameSortField;
            }
            set
            {
                this.soloistNameSortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
    public partial class TrackMeta
    {
        
        private string trackNameField;
        
        private int trackLengthField;
        
        private int trackNumberField;
        
        private string trackArtistField;
        
        private string composerNameField;
        
        private string composerNameSortField;
        
        private int albumCodeField;
        
        private int albumIDField;
        
        private string conductorNameField;
        
        private string conductorNameSortField;
        
        private string orchestraField;
        
        private string chorusField;
        
        private string[] soloistsField;
        
        private Soloist[] soloistsCollField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TrackName
        {
            get
            {
                return this.trackNameField;
            }
            set
            {
                this.trackNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int TrackLength
        {
            get
            {
                return this.trackLengthField;
            }
            set
            {
                this.trackLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int TrackNumber
        {
            get
            {
                return this.trackNumberField;
            }
            set
            {
                this.trackNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TrackArtist
        {
            get
            {
                return this.trackArtistField;
            }
            set
            {
                this.trackArtistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ComposerName
        {
            get
            {
                return this.composerNameField;
            }
            set
            {
                this.composerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ComposerNameSort
        {
            get
            {
                return this.composerNameSortField;
            }
            set
            {
                this.composerNameSortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int AlbumCode
        {
            get
            {
                return this.albumCodeField;
            }
            set
            {
                this.albumCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int AlbumID
        {
            get
            {
                return this.albumIDField;
            }
            set
            {
                this.albumIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ConductorName
        {
            get
            {
                return this.conductorNameField;
            }
            set
            {
                this.conductorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string ConductorNameSort
        {
            get
            {
                return this.conductorNameSortField;
            }
            set
            {
                this.conductorNameSortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Orchestra
        {
            get
            {
                return this.orchestraField;
            }
            set
            {
                this.orchestraField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Chorus
        {
            get
            {
                return this.chorusField;
            }
            set
            {
                this.chorusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        public string[] Soloists
        {
            get
            {
                return this.soloistsField;
            }
            set
            {
                this.soloistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=13)]
        public Soloist[] SoloistsColl
        {
            get
            {
                return this.soloistsCollField;
            }
            set
            {
                this.soloistsCollField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
    public partial class AlbumMeta
    {
        
        private int albumIDField;
        
        private int albumCodeField;
        
        private string albumField;
        
        private string artistField;
        
        private string genreField;
        
        private string albumYearField;
        
        private string compilationField;
        
        private string folder_ArtistField;
        
        private string folder_AlbumField;
        
        private string publisherField;
        
        private string artistSortField;
        
        private string conductorField;
        
        private byte[] albumImageField;
        
        private System.DateTime dateStampField;
        
        private string albumTOCField;
        
        private string catalogNumberField;
        
        private TrackMeta[] trackMetaField;
        
        private string subGenre1Field;
        
        private string subGenre2Field;
        
        private string subGenre3Field;
        
        private string periodField;
        
        private string countryField;
        
        private string languageField;
        
        private int requestIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int AlbumID
        {
            get
            {
                return this.albumIDField;
            }
            set
            {
                this.albumIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int AlbumCode
        {
            get
            {
                return this.albumCodeField;
            }
            set
            {
                this.albumCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Album
        {
            get
            {
                return this.albumField;
            }
            set
            {
                this.albumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Artist
        {
            get
            {
                return this.artistField;
            }
            set
            {
                this.artistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Genre
        {
            get
            {
                return this.genreField;
            }
            set
            {
                this.genreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AlbumYear
        {
            get
            {
                return this.albumYearField;
            }
            set
            {
                this.albumYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Compilation
        {
            get
            {
                return this.compilationField;
            }
            set
            {
                this.compilationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Folder_Artist
        {
            get
            {
                return this.folder_ArtistField;
            }
            set
            {
                this.folder_ArtistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Folder_Album
        {
            get
            {
                return this.folder_AlbumField;
            }
            set
            {
                this.folder_AlbumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Publisher
        {
            get
            {
                return this.publisherField;
            }
            set
            {
                this.publisherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ArtistSort
        {
            get
            {
                return this.artistSortField;
            }
            set
            {
                this.artistSortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Conductor
        {
            get
            {
                return this.conductorField;
            }
            set
            {
                this.conductorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=12)]
        public byte[] AlbumImage
        {
            get
            {
                return this.albumImageField;
            }
            set
            {
                this.albumImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public System.DateTime DateStamp
        {
            get
            {
                return this.dateStampField;
            }
            set
            {
                this.dateStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string AlbumTOC
        {
            get
            {
                return this.albumTOCField;
            }
            set
            {
                this.albumTOCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string CatalogNumber
        {
            get
            {
                return this.catalogNumberField;
            }
            set
            {
                this.catalogNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=16)]
        public TrackMeta[] trackMeta
        {
            get
            {
                return this.trackMetaField;
            }
            set
            {
                this.trackMetaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string SubGenre1
        {
            get
            {
                return this.subGenre1Field;
            }
            set
            {
                this.subGenre1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string SubGenre2
        {
            get
            {
                return this.subGenre2Field;
            }
            set
            {
                this.subGenre2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string SubGenre3
        {
            get
            {
                return this.subGenre3Field;
            }
            set
            {
                this.subGenre3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string Period
        {
            get
            {
                return this.periodField;
            }
            set
            {
                this.periodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string Country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string Language
        {
            get
            {
                return this.languageField;
            }
            set
            {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public int RequestID
        {
            get
            {
                return this.requestIDField;
            }
            set
            {
                this.requestIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LatestEncodeCenterVersion", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class LatestEncodeCenterVersionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string product;
        
        public LatestEncodeCenterVersionRequest()
        {
        }
        
        public LatestEncodeCenterVersionRequest(GD3.AuthHeader AuthHeader, string product)
        {
            this.AuthHeader = AuthHeader;
            this.product = product;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LatestEncodeCenterVersionResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class LatestEncodeCenterVersionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string LatestEncodeCenterVersionResult;
        
        public LatestEncodeCenterVersionResponse()
        {
        }
        
        public LatestEncodeCenterVersionResponse(string LatestEncodeCenterVersionResult)
        {
            this.LatestEncodeCenterVersionResult = LatestEncodeCenterVersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LatestEncodeCenterVersionURL", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class LatestEncodeCenterVersionURLRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string product;
        
        public LatestEncodeCenterVersionURLRequest()
        {
        }
        
        public LatestEncodeCenterVersionURLRequest(GD3.AuthHeader AuthHeader, string product)
        {
            this.AuthHeader = AuthHeader;
            this.product = product;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LatestEncodeCenterVersionURLResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class LatestEncodeCenterVersionURLResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string LatestEncodeCenterVersionURLResult;
        
        public LatestEncodeCenterVersionURLResponse()
        {
        }
        
        public LatestEncodeCenterVersionURLResponse(string LatestEncodeCenterVersionURLResult)
        {
            this.LatestEncodeCenterVersionURLResult = LatestEncodeCenterVersionURLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveAlbum", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class RetrieveAlbumRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public int AlbumID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public int LanguageCode;
        
        public RetrieveAlbumRequest()
        {
        }
        
        public RetrieveAlbumRequest(GD3.AuthHeader AuthHeader, int AlbumID, int LanguageCode)
        {
            this.AuthHeader = AuthHeader;
            this.AlbumID = AlbumID;
            this.LanguageCode = LanguageCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveAlbumResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class RetrieveAlbumResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.AlbumMeta RetrieveAlbumResult;
        
        public RetrieveAlbumResponse()
        {
        }
        
        public RetrieveAlbumResponse(GD3.AlbumMeta RetrieveAlbumResult)
        {
            this.RetrieveAlbumResult = RetrieveAlbumResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MatchCDID_ISRC", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class MatchCDID_ISRCRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string CDID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public string UPC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=2)]
        public string[] ISRC;
        
        public MatchCDID_ISRCRequest()
        {
        }
        
        public MatchCDID_ISRCRequest(GD3.AuthHeader AuthHeader, string CDID, string UPC, string[] ISRC)
        {
            this.AuthHeader = AuthHeader;
            this.CDID = CDID;
            this.UPC = UPC;
            this.ISRC = ISRC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MatchCDID_ISRCResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class MatchCDID_ISRCResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.AlbumCode[] MatchCDID_ISRCResult;
        
        public MatchCDID_ISRCResponse()
        {
        }
        
        public MatchCDID_ISRCResponse(GD3.AlbumCode[] MatchCDID_ISRCResult)
        {
            this.MatchCDID_ISRCResult = MatchCDID_ISRCResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MatchCDID", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class MatchCDIDRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string CDID;
        
        public MatchCDIDRequest()
        {
        }
        
        public MatchCDIDRequest(GD3.AuthHeader AuthHeader, string CDID)
        {
            this.AuthHeader = AuthHeader;
            this.CDID = CDID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MatchCDIDResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class MatchCDIDResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.AlbumCode[] MatchCDIDResult;
        
        public MatchCDIDResponse()
        {
        }
        
        public MatchCDIDResponse(GD3.AuthHeader AuthHeader, GD3.AlbumCode[] MatchCDIDResult)
        {
            this.AuthHeader = AuthHeader;
            this.MatchCDIDResult = MatchCDIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MatchCDID2", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class MatchCDID2Request
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string CDID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public bool UseStagingDb;
        
        public MatchCDID2Request()
        {
        }
        
        public MatchCDID2Request(GD3.AuthHeader AuthHeader, string CDID, bool UseStagingDb)
        {
            this.AuthHeader = AuthHeader;
            this.CDID = CDID;
            this.UseStagingDb = UseStagingDb;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MatchCDID2Response", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class MatchCDID2Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.AlbumCode[] MatchCDID2Result;
        
        public MatchCDID2Response()
        {
        }
        
        public MatchCDID2Response(GD3.AlbumCode[] MatchCDID2Result)
        {
            this.MatchCDID2Result = MatchCDID2Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MatchCDID_Advanced", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class MatchCDID_AdvancedRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string CDID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public int pass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=2)]
        public int totalpass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=3)]
        public string a1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=4)]
        public string a2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=5)]
        public string a3;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=6)]
        public string a4;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=7)]
        public string a5;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=8)]
        public bool StagingEditor;
        
        public MatchCDID_AdvancedRequest()
        {
        }
        
        public MatchCDID_AdvancedRequest(GD3.AuthHeader AuthHeader, string CDID, int pass, int totalpass, string a1, string a2, string a3, string a4, string a5, bool StagingEditor)
        {
            this.AuthHeader = AuthHeader;
            this.CDID = CDID;
            this.pass = pass;
            this.totalpass = totalpass;
            this.a1 = a1;
            this.a2 = a2;
            this.a3 = a3;
            this.a4 = a4;
            this.a5 = a5;
            this.StagingEditor = StagingEditor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MatchCDID_AdvancedResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class MatchCDID_AdvancedResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.AlbumCode[] MatchCDID_AdvancedResult;
        
        public MatchCDID_AdvancedResponse()
        {
        }
        
        public MatchCDID_AdvancedResponse(GD3.AlbumCode[] MatchCDID_AdvancedResult)
        {
            this.MatchCDID_AdvancedResult = MatchCDID_AdvancedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertAlbum", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class InsertAlbumRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.AlbumMeta album;
        
        public InsertAlbumRequest()
        {
        }
        
        public InsertAlbumRequest(GD3.AuthHeader AuthHeader, GD3.AlbumMeta album)
        {
            this.AuthHeader = AuthHeader;
            this.album = album;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertAlbumResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class InsertAlbumResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public bool InsertAlbumResult;
        
        public InsertAlbumResponse()
        {
        }
        
        public InsertAlbumResponse(bool InsertAlbumResult)
        {
            this.InsertAlbumResult = InsertAlbumResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePassword", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class UpdatePasswordRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string newPassword;
        
        public UpdatePasswordRequest()
        {
        }
        
        public UpdatePasswordRequest(GD3.AuthHeader AuthHeader, string newPassword)
        {
            this.AuthHeader = AuthHeader;
            this.newPassword = newPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePasswordResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class UpdatePasswordResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string UpdatePasswordResult;
        
        public UpdatePasswordResponse()
        {
        }
        
        public UpdatePasswordResponse(string UpdatePasswordResult)
        {
            this.UpdatePasswordResult = UpdatePasswordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNumberOfLookupsRemaining", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class GetNumberOfLookupsRemainingRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        public GetNumberOfLookupsRemainingRequest()
        {
        }
        
        public GetNumberOfLookupsRemainingRequest(GD3.AuthHeader AuthHeader)
        {
            this.AuthHeader = AuthHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNumberOfLookupsRemainingResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class GetNumberOfLookupsRemainingResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public int GetNumberOfLookupsRemainingResult;
        
        public GetNumberOfLookupsRemainingResponse()
        {
        }
        
        public GetNumberOfLookupsRemainingResponse(int GetNumberOfLookupsRemainingResult)
        {
            this.GetNumberOfLookupsRemainingResult = GetNumberOfLookupsRemainingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchArtistNames", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchArtistNamesRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string Artist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public int NumberResults;
        
        public SearchArtistNamesRequest()
        {
        }
        
        public SearchArtistNamesRequest(GD3.AuthHeader AuthHeader, string Artist, int NumberResults)
        {
            this.AuthHeader = AuthHeader;
            this.Artist = Artist;
            this.NumberResults = NumberResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchArtistNamesResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchArtistNamesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.SearchResult[] SearchArtistNamesResult;
        
        public SearchArtistNamesResponse()
        {
        }
        
        public SearchArtistNamesResponse(GD3.SearchResult[] SearchArtistNamesResult)
        {
            this.SearchArtistNamesResult = SearchArtistNamesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchArtist", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchArtistRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string Artist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public int NumberResults;
        
        public SearchArtistRequest()
        {
        }
        
        public SearchArtistRequest(GD3.AuthHeader AuthHeader, string Artist, int NumberResults)
        {
            this.AuthHeader = AuthHeader;
            this.Artist = Artist;
            this.NumberResults = NumberResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchArtistResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchArtistResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.SearchResult[] SearchArtistResult;
        
        public SearchArtistResponse()
        {
        }
        
        public SearchArtistResponse(GD3.SearchResult[] SearchArtistResult)
        {
            this.SearchArtistResult = SearchArtistResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchTracks", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchTracksRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string Artist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public string TrackTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=2)]
        public int NumberResults;
        
        public SearchTracksRequest()
        {
        }
        
        public SearchTracksRequest(GD3.AuthHeader AuthHeader, string Artist, string TrackTitle, int NumberResults)
        {
            this.AuthHeader = AuthHeader;
            this.Artist = Artist;
            this.TrackTitle = TrackTitle;
            this.NumberResults = NumberResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchTracksResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchTracksResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.SearchResult[] SearchTracksResult;
        
        public SearchTracksResponse()
        {
        }
        
        public SearchTracksResponse(GD3.SearchResult[] SearchTracksResult)
        {
            this.SearchTracksResult = SearchTracksResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchTracksByArtistAlbum", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchTracksByArtistAlbumRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string Artist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public string Album;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=2)]
        public string TrackTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=3)]
        public int NumberResults;
        
        public SearchTracksByArtistAlbumRequest()
        {
        }
        
        public SearchTracksByArtistAlbumRequest(GD3.AuthHeader AuthHeader, string Artist, string Album, string TrackTitle, int NumberResults)
        {
            this.AuthHeader = AuthHeader;
            this.Artist = Artist;
            this.Album = Album;
            this.TrackTitle = TrackTitle;
            this.NumberResults = NumberResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchTracksByArtistAlbumResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchTracksByArtistAlbumResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.SearchResult[] SearchTracksByArtistAlbumResult;
        
        public SearchTracksByArtistAlbumResponse()
        {
        }
        
        public SearchTracksByArtistAlbumResponse(GD3.SearchResult[] SearchTracksByArtistAlbumResult)
        {
            this.SearchTracksByArtistAlbumResult = SearchTracksByArtistAlbumResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchAlbum", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchAlbumRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string Artist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public string AlbumTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=2)]
        public int NumberResults;
        
        public SearchAlbumRequest()
        {
        }
        
        public SearchAlbumRequest(GD3.AuthHeader AuthHeader, string Artist, string AlbumTitle, int NumberResults)
        {
            this.AuthHeader = AuthHeader;
            this.Artist = Artist;
            this.AlbumTitle = AlbumTitle;
            this.NumberResults = NumberResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchAlbumResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchAlbumResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.SearchResult[] SearchAlbumResult;
        
        public SearchAlbumResponse()
        {
        }
        
        public SearchAlbumResponse(GD3.SearchResult[] SearchAlbumResult)
        {
            this.SearchAlbumResult = SearchAlbumResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchAlbumExt", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchAlbumExtRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string Artist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public string AlbumTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=2)]
        public int PageLimit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=3)]
        public int PageNumber;
        
        public SearchAlbumExtRequest()
        {
        }
        
        public SearchAlbumExtRequest(GD3.AuthHeader AuthHeader, string Artist, string AlbumTitle, int PageLimit, int PageNumber)
        {
            this.AuthHeader = AuthHeader;
            this.Artist = Artist;
            this.AlbumTitle = AlbumTitle;
            this.PageLimit = PageLimit;
            this.PageNumber = PageNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchAlbumExtResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class SearchAlbumExtResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.SearchResultExt SearchAlbumExtResult;
        
        public SearchAlbumExtResponse()
        {
        }
        
        public SearchAlbumExtResponse(GD3.SearchResultExt SearchAlbumExtResult)
        {
            this.SearchAlbumExtResult = SearchAlbumExtResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveGenreInfo", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class RetrieveGenreInfoRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        public RetrieveGenreInfoRequest()
        {
        }
        
        public RetrieveGenreInfoRequest(GD3.AuthHeader AuthHeader)
        {
            this.AuthHeader = AuthHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveGenreInfoResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class RetrieveGenreInfoResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.ArrayOfXElement RetrieveGenreInfoResult;
        
        public RetrieveGenreInfoResponse()
        {
        }
        
        public RetrieveGenreInfoResponse(GD3.ArrayOfXElement RetrieveGenreInfoResult)
        {
            this.RetrieveGenreInfoResult = RetrieveGenreInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FingerPrint_getTocSessionID", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class FingerPrint_getTocSessionIDRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string cdTOC;
        
        public FingerPrint_getTocSessionIDRequest()
        {
        }
        
        public FingerPrint_getTocSessionIDRequest(GD3.AuthHeader AuthHeader, string cdTOC)
        {
            this.AuthHeader = AuthHeader;
            this.cdTOC = cdTOC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FingerPrint_getTocSessionIDResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class FingerPrint_getTocSessionIDResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.FingPrintResult FingerPrint_getTocSessionIDResult;
        
        public FingerPrint_getTocSessionIDResponse()
        {
        }
        
        public FingerPrint_getTocSessionIDResponse(GD3.FingPrintResult FingerPrint_getTocSessionIDResult)
        {
            this.FingerPrint_getTocSessionIDResult = FingerPrint_getTocSessionIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FingerPrint_Insert", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class FingerPrint_InsertRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public System.Guid TocSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public int TrackNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=2)]
        public string cdTOC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=3)]
        public int durationMs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FPrint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=5)]
        public int FPrintValsCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=6)]
        public string ApplicationName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=7)]
        public string tkidversion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=8)]
        public int channels;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=9)]
        public int samplerate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=10)]
        public int samplesize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=11)]
        public string trackname;
        
        public FingerPrint_InsertRequest()
        {
        }
        
        public FingerPrint_InsertRequest(GD3.AuthHeader AuthHeader, System.Guid TocSessionID, int TrackNumber, string cdTOC, int durationMs, byte[] FPrint, int FPrintValsCount, string ApplicationName, string tkidversion, int channels, int samplerate, int samplesize, string trackname)
        {
            this.AuthHeader = AuthHeader;
            this.TocSessionID = TocSessionID;
            this.TrackNumber = TrackNumber;
            this.cdTOC = cdTOC;
            this.durationMs = durationMs;
            this.FPrint = FPrint;
            this.FPrintValsCount = FPrintValsCount;
            this.ApplicationName = ApplicationName;
            this.tkidversion = tkidversion;
            this.channels = channels;
            this.samplerate = samplerate;
            this.samplesize = samplesize;
            this.trackname = trackname;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FingerPrint_InsertResponse", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class FingerPrint_InsertResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.FingPrintResult FingerPrint_InsertResult;
        
        public FingerPrint_InsertResponse()
        {
        }
        
        public FingerPrint_InsertResponse(GD3.FingPrintResult FingerPrint_InsertResult)
        {
            this.FingerPrint_InsertResult = FingerPrint_InsertResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FingerPrint_getTocSessionID2", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class FingerPrint_getTocSessionID2Request
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public string cdTOC;
        
        public FingerPrint_getTocSessionID2Request()
        {
        }
        
        public FingerPrint_getTocSessionID2Request(GD3.AuthHeader AuthHeader, string cdTOC)
        {
            this.AuthHeader = AuthHeader;
            this.cdTOC = cdTOC;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FingerPrint_getTocSessionID2Response", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class FingerPrint_getTocSessionID2Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.FingPrintResult FingerPrint_getTocSessionID2Result;
        
        public FingerPrint_getTocSessionID2Response()
        {
        }
        
        public FingerPrint_getTocSessionID2Response(GD3.FingPrintResult FingerPrint_getTocSessionID2Result)
        {
            this.FingerPrint_getTocSessionID2Result = FingerPrint_getTocSessionID2Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FingerPrint_Insert2", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class FingerPrint_Insert2Request
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3")]
        public GD3.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public System.Guid TocSessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=1)]
        public int TrackNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=2)]
        public string cdTOC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=3)]
        public int durationMs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=4)]
        public string FPrint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=5)]
        public int FPrintValsCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=6)]
        public string ApplicationName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=7)]
        public string tkidversion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=8)]
        public int channels;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=9)]
        public int samplerate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=10)]
        public int samplecount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=11)]
        public string artist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=12)]
        public string album;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=13)]
        public string title;
        
        public FingerPrint_Insert2Request()
        {
        }
        
        public FingerPrint_Insert2Request(GD3.AuthHeader AuthHeader, System.Guid TocSessionID, int TrackNumber, string cdTOC, int durationMs, string FPrint, int FPrintValsCount, string ApplicationName, string tkidversion, int channels, int samplerate, int samplecount, string artist, string album, string title)
        {
            this.AuthHeader = AuthHeader;
            this.TocSessionID = TocSessionID;
            this.TrackNumber = TrackNumber;
            this.cdTOC = cdTOC;
            this.durationMs = durationMs;
            this.FPrint = FPrint;
            this.FPrintValsCount = FPrintValsCount;
            this.ApplicationName = ApplicationName;
            this.tkidversion = tkidversion;
            this.channels = channels;
            this.samplerate = samplerate;
            this.samplecount = samplecount;
            this.artist = artist;
            this.album = album;
            this.title = title;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FingerPrint_Insert2Response", WrapperNamespace="https://gdwebservice.getdigitaldata.com/GD3", IsWrapped=true)]
    public partial class FingerPrint_Insert2Response
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://gdwebservice.getdigitaldata.com/GD3", Order=0)]
        public GD3.FingPrintResult FingerPrint_Insert2Result;
        
        public FingerPrint_Insert2Response()
        {
        }
        
        public FingerPrint_Insert2Response(GD3.FingPrintResult FingerPrint_Insert2Result)
        {
            this.FingerPrint_Insert2Result = FingerPrint_Insert2Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface GD3SoapChannel : GD3.GD3Soap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class GD3SoapClient : System.ServiceModel.ClientBase<GD3.GD3Soap>, GD3.GD3Soap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public GD3SoapClient(EndpointConfiguration endpointConfiguration) : 
                base(GD3SoapClient.GetBindingForEndpoint(endpointConfiguration), GD3SoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GD3SoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(GD3SoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GD3SoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(GD3SoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GD3SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.LatestEncodeCenterVersionResponse> GD3.GD3Soap.LatestEncodeCenterVersionAsync(GD3.LatestEncodeCenterVersionRequest request)
        {
            return base.Channel.LatestEncodeCenterVersionAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.LatestEncodeCenterVersionResponse> LatestEncodeCenterVersionAsync(GD3.AuthHeader AuthHeader, string product)
        {
            GD3.LatestEncodeCenterVersionRequest inValue = new GD3.LatestEncodeCenterVersionRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.product = product;
            return ((GD3.GD3Soap)(this)).LatestEncodeCenterVersionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.LatestEncodeCenterVersionURLResponse> GD3.GD3Soap.LatestEncodeCenterVersionURLAsync(GD3.LatestEncodeCenterVersionURLRequest request)
        {
            return base.Channel.LatestEncodeCenterVersionURLAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.LatestEncodeCenterVersionURLResponse> LatestEncodeCenterVersionURLAsync(GD3.AuthHeader AuthHeader, string product)
        {
            GD3.LatestEncodeCenterVersionURLRequest inValue = new GD3.LatestEncodeCenterVersionURLRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.product = product;
            return ((GD3.GD3Soap)(this)).LatestEncodeCenterVersionURLAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.RetrieveAlbumResponse> GD3.GD3Soap.RetrieveAlbumAsync(GD3.RetrieveAlbumRequest request)
        {
            return base.Channel.RetrieveAlbumAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.RetrieveAlbumResponse> RetrieveAlbumAsync(GD3.AuthHeader AuthHeader, int AlbumID, int LanguageCode)
        {
            GD3.RetrieveAlbumRequest inValue = new GD3.RetrieveAlbumRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.AlbumID = AlbumID;
            inValue.LanguageCode = LanguageCode;
            return ((GD3.GD3Soap)(this)).RetrieveAlbumAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.MatchCDID_ISRCResponse> GD3.GD3Soap.MatchCDID_ISRCAsync(GD3.MatchCDID_ISRCRequest request)
        {
            return base.Channel.MatchCDID_ISRCAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.MatchCDID_ISRCResponse> MatchCDID_ISRCAsync(GD3.AuthHeader AuthHeader, string CDID, string UPC, string[] ISRC)
        {
            GD3.MatchCDID_ISRCRequest inValue = new GD3.MatchCDID_ISRCRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.CDID = CDID;
            inValue.UPC = UPC;
            inValue.ISRC = ISRC;
            return ((GD3.GD3Soap)(this)).MatchCDID_ISRCAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.MatchCDIDResponse> GD3.GD3Soap.MatchCDIDAsync(GD3.MatchCDIDRequest request)
        {
            return base.Channel.MatchCDIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.MatchCDIDResponse> MatchCDIDAsync(GD3.AuthHeader AuthHeader, string CDID)
        {
            GD3.MatchCDIDRequest inValue = new GD3.MatchCDIDRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.CDID = CDID;
            return ((GD3.GD3Soap)(this)).MatchCDIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.MatchCDID2Response> GD3.GD3Soap.MatchCDID2Async(GD3.MatchCDID2Request request)
        {
            return base.Channel.MatchCDID2Async(request);
        }
        
        public System.Threading.Tasks.Task<GD3.MatchCDID2Response> MatchCDID2Async(GD3.AuthHeader AuthHeader, string CDID, bool UseStagingDb)
        {
            GD3.MatchCDID2Request inValue = new GD3.MatchCDID2Request();
            inValue.AuthHeader = AuthHeader;
            inValue.CDID = CDID;
            inValue.UseStagingDb = UseStagingDb;
            return ((GD3.GD3Soap)(this)).MatchCDID2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.MatchCDID_AdvancedResponse> GD3.GD3Soap.MatchCDID_AdvancedAsync(GD3.MatchCDID_AdvancedRequest request)
        {
            return base.Channel.MatchCDID_AdvancedAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.MatchCDID_AdvancedResponse> MatchCDID_AdvancedAsync(GD3.AuthHeader AuthHeader, string CDID, int pass, int totalpass, string a1, string a2, string a3, string a4, string a5, bool StagingEditor)
        {
            GD3.MatchCDID_AdvancedRequest inValue = new GD3.MatchCDID_AdvancedRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.CDID = CDID;
            inValue.pass = pass;
            inValue.totalpass = totalpass;
            inValue.a1 = a1;
            inValue.a2 = a2;
            inValue.a3 = a3;
            inValue.a4 = a4;
            inValue.a5 = a5;
            inValue.StagingEditor = StagingEditor;
            return ((GD3.GD3Soap)(this)).MatchCDID_AdvancedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.InsertAlbumResponse> GD3.GD3Soap.InsertAlbumAsync(GD3.InsertAlbumRequest request)
        {
            return base.Channel.InsertAlbumAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.InsertAlbumResponse> InsertAlbumAsync(GD3.AuthHeader AuthHeader, GD3.AlbumMeta album)
        {
            GD3.InsertAlbumRequest inValue = new GD3.InsertAlbumRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.album = album;
            return ((GD3.GD3Soap)(this)).InsertAlbumAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.UpdatePasswordResponse> GD3.GD3Soap.UpdatePasswordAsync(GD3.UpdatePasswordRequest request)
        {
            return base.Channel.UpdatePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.UpdatePasswordResponse> UpdatePasswordAsync(GD3.AuthHeader AuthHeader, string newPassword)
        {
            GD3.UpdatePasswordRequest inValue = new GD3.UpdatePasswordRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.newPassword = newPassword;
            return ((GD3.GD3Soap)(this)).UpdatePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.GetNumberOfLookupsRemainingResponse> GD3.GD3Soap.GetNumberOfLookupsRemainingAsync(GD3.GetNumberOfLookupsRemainingRequest request)
        {
            return base.Channel.GetNumberOfLookupsRemainingAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.GetNumberOfLookupsRemainingResponse> GetNumberOfLookupsRemainingAsync(GD3.AuthHeader AuthHeader)
        {
            GD3.GetNumberOfLookupsRemainingRequest inValue = new GD3.GetNumberOfLookupsRemainingRequest();
            inValue.AuthHeader = AuthHeader;
            return ((GD3.GD3Soap)(this)).GetNumberOfLookupsRemainingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.SearchArtistNamesResponse> GD3.GD3Soap.SearchArtistNamesAsync(GD3.SearchArtistNamesRequest request)
        {
            return base.Channel.SearchArtistNamesAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.SearchArtistNamesResponse> SearchArtistNamesAsync(GD3.AuthHeader AuthHeader, string Artist, int NumberResults)
        {
            GD3.SearchArtistNamesRequest inValue = new GD3.SearchArtistNamesRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.Artist = Artist;
            inValue.NumberResults = NumberResults;
            return ((GD3.GD3Soap)(this)).SearchArtistNamesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.SearchArtistResponse> GD3.GD3Soap.SearchArtistAsync(GD3.SearchArtistRequest request)
        {
            return base.Channel.SearchArtistAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.SearchArtistResponse> SearchArtistAsync(GD3.AuthHeader AuthHeader, string Artist, int NumberResults)
        {
            GD3.SearchArtistRequest inValue = new GD3.SearchArtistRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.Artist = Artist;
            inValue.NumberResults = NumberResults;
            return ((GD3.GD3Soap)(this)).SearchArtistAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.SearchTracksResponse> GD3.GD3Soap.SearchTracksAsync(GD3.SearchTracksRequest request)
        {
            return base.Channel.SearchTracksAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.SearchTracksResponse> SearchTracksAsync(GD3.AuthHeader AuthHeader, string Artist, string TrackTitle, int NumberResults)
        {
            GD3.SearchTracksRequest inValue = new GD3.SearchTracksRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.Artist = Artist;
            inValue.TrackTitle = TrackTitle;
            inValue.NumberResults = NumberResults;
            return ((GD3.GD3Soap)(this)).SearchTracksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.SearchTracksByArtistAlbumResponse> GD3.GD3Soap.SearchTracksByArtistAlbumAsync(GD3.SearchTracksByArtistAlbumRequest request)
        {
            return base.Channel.SearchTracksByArtistAlbumAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.SearchTracksByArtistAlbumResponse> SearchTracksByArtistAlbumAsync(GD3.AuthHeader AuthHeader, string Artist, string Album, string TrackTitle, int NumberResults)
        {
            GD3.SearchTracksByArtistAlbumRequest inValue = new GD3.SearchTracksByArtistAlbumRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.Artist = Artist;
            inValue.Album = Album;
            inValue.TrackTitle = TrackTitle;
            inValue.NumberResults = NumberResults;
            return ((GD3.GD3Soap)(this)).SearchTracksByArtistAlbumAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.SearchAlbumResponse> GD3.GD3Soap.SearchAlbumAsync(GD3.SearchAlbumRequest request)
        {
            return base.Channel.SearchAlbumAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.SearchAlbumResponse> SearchAlbumAsync(GD3.AuthHeader AuthHeader, string Artist, string AlbumTitle, int NumberResults)
        {
            GD3.SearchAlbumRequest inValue = new GD3.SearchAlbumRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.Artist = Artist;
            inValue.AlbumTitle = AlbumTitle;
            inValue.NumberResults = NumberResults;
            return ((GD3.GD3Soap)(this)).SearchAlbumAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.SearchAlbumExtResponse> GD3.GD3Soap.SearchAlbumExtAsync(GD3.SearchAlbumExtRequest request)
        {
            return base.Channel.SearchAlbumExtAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.SearchAlbumExtResponse> SearchAlbumExtAsync(GD3.AuthHeader AuthHeader, string Artist, string AlbumTitle, int PageLimit, int PageNumber)
        {
            GD3.SearchAlbumExtRequest inValue = new GD3.SearchAlbumExtRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.Artist = Artist;
            inValue.AlbumTitle = AlbumTitle;
            inValue.PageLimit = PageLimit;
            inValue.PageNumber = PageNumber;
            return ((GD3.GD3Soap)(this)).SearchAlbumExtAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.RetrieveGenreInfoResponse> GD3.GD3Soap.RetrieveGenreInfoAsync(GD3.RetrieveGenreInfoRequest request)
        {
            return base.Channel.RetrieveGenreInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.RetrieveGenreInfoResponse> RetrieveGenreInfoAsync(GD3.AuthHeader AuthHeader)
        {
            GD3.RetrieveGenreInfoRequest inValue = new GD3.RetrieveGenreInfoRequest();
            inValue.AuthHeader = AuthHeader;
            return ((GD3.GD3Soap)(this)).RetrieveGenreInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.FingerPrint_getTocSessionIDResponse> GD3.GD3Soap.FingerPrint_getTocSessionIDAsync(GD3.FingerPrint_getTocSessionIDRequest request)
        {
            return base.Channel.FingerPrint_getTocSessionIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.FingerPrint_getTocSessionIDResponse> FingerPrint_getTocSessionIDAsync(GD3.AuthHeader AuthHeader, string cdTOC)
        {
            GD3.FingerPrint_getTocSessionIDRequest inValue = new GD3.FingerPrint_getTocSessionIDRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.cdTOC = cdTOC;
            return ((GD3.GD3Soap)(this)).FingerPrint_getTocSessionIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.FingerPrint_InsertResponse> GD3.GD3Soap.FingerPrint_InsertAsync(GD3.FingerPrint_InsertRequest request)
        {
            return base.Channel.FingerPrint_InsertAsync(request);
        }
        
        public System.Threading.Tasks.Task<GD3.FingerPrint_InsertResponse> FingerPrint_InsertAsync(GD3.AuthHeader AuthHeader, System.Guid TocSessionID, int TrackNumber, string cdTOC, int durationMs, byte[] FPrint, int FPrintValsCount, string ApplicationName, string tkidversion, int channels, int samplerate, int samplesize, string trackname)
        {
            GD3.FingerPrint_InsertRequest inValue = new GD3.FingerPrint_InsertRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.TocSessionID = TocSessionID;
            inValue.TrackNumber = TrackNumber;
            inValue.cdTOC = cdTOC;
            inValue.durationMs = durationMs;
            inValue.FPrint = FPrint;
            inValue.FPrintValsCount = FPrintValsCount;
            inValue.ApplicationName = ApplicationName;
            inValue.tkidversion = tkidversion;
            inValue.channels = channels;
            inValue.samplerate = samplerate;
            inValue.samplesize = samplesize;
            inValue.trackname = trackname;
            return ((GD3.GD3Soap)(this)).FingerPrint_InsertAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.FingerPrint_getTocSessionID2Response> GD3.GD3Soap.FingerPrint_getTocSessionID2Async(GD3.FingerPrint_getTocSessionID2Request request)
        {
            return base.Channel.FingerPrint_getTocSessionID2Async(request);
        }
        
        public System.Threading.Tasks.Task<GD3.FingerPrint_getTocSessionID2Response> FingerPrint_getTocSessionID2Async(GD3.AuthHeader AuthHeader, string cdTOC)
        {
            GD3.FingerPrint_getTocSessionID2Request inValue = new GD3.FingerPrint_getTocSessionID2Request();
            inValue.AuthHeader = AuthHeader;
            inValue.cdTOC = cdTOC;
            return ((GD3.GD3Soap)(this)).FingerPrint_getTocSessionID2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GD3.FingerPrint_Insert2Response> GD3.GD3Soap.FingerPrint_Insert2Async(GD3.FingerPrint_Insert2Request request)
        {
            return base.Channel.FingerPrint_Insert2Async(request);
        }
        
        public System.Threading.Tasks.Task<GD3.FingerPrint_Insert2Response> FingerPrint_Insert2Async(GD3.AuthHeader AuthHeader, System.Guid TocSessionID, int TrackNumber, string cdTOC, int durationMs, string FPrint, int FPrintValsCount, string ApplicationName, string tkidversion, int channels, int samplerate, int samplecount, string artist, string album, string title)
        {
            GD3.FingerPrint_Insert2Request inValue = new GD3.FingerPrint_Insert2Request();
            inValue.AuthHeader = AuthHeader;
            inValue.TocSessionID = TocSessionID;
            inValue.TrackNumber = TrackNumber;
            inValue.cdTOC = cdTOC;
            inValue.durationMs = durationMs;
            inValue.FPrint = FPrint;
            inValue.FPrintValsCount = FPrintValsCount;
            inValue.ApplicationName = ApplicationName;
            inValue.tkidversion = tkidversion;
            inValue.channels = channels;
            inValue.samplerate = samplerate;
            inValue.samplecount = samplecount;
            inValue.artist = artist;
            inValue.album = album;
            inValue.title = title;
            return ((GD3.GD3Soap)(this)).FingerPrint_Insert2Async(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public new virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.GD3Soap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.GD3Soap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.GD3Soap))
            {
                return new System.ServiceModel.EndpointAddress("https://gdwebservice.getdigitaldata.com/GD3.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.GD3Soap12))
            {
                return new System.ServiceModel.EndpointAddress("https://gdwebservice.getdigitaldata.com/GD3.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            GD3Soap,
            
            GD3Soap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.0.0.2")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
